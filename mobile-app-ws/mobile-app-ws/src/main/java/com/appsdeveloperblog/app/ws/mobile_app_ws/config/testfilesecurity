<dependency>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-security</artifactId>
</dependency>




package com.example.security;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.web.SecurityFilterChain;

@Configuration
public class SecurityConfig {

    @Bean
    public SecurityFilterChain securityFilterChain(HttpSecurity http) throws Exception {
        http
            .authorizeHttpRequests(auth -> auth
                .requestMatchers("/public/**").permitAll() // Allow unauthenticated access to /public/*
                .anyRequest().authenticated() // Protect all other endpoints
            )
            .httpBasic(); // Enable basic authentication

        return http.build();
    }
}




spring.security.user.name=admin
spring.security.user.password=password





package com.example.controller;

import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RestController;

@RestController
public class TestController {

    @GetMapping("/public/hello")
    public String publicEndpoint() {
        return "This is a public endpoint.";
    }

    @GetMapping("/private/hello")
    public String privateEndpoint() {
        return "This is a private endpoint.";
    }
}